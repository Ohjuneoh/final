<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.helf.mapper.UserMapper">
	
	<select id="getUserById" parameterType="string" resultType="User">
		select
			user_id					as id,
			user_email				as email,
			user_name				as name,
			user_tel				as tel,
			user_encrypted_password as encryptedPassword,
			user_gender				as gender,
			user_status				as status,
			user_mobile_carrier		as mobileCarrier,
			user_create_date		as createDate,
			user_update_date		as updateDate,
			user_point				as point,
			rank_no					as "rank.no",
			user_type				as type
			
		from
			helf_users
		where 
			user_id = #{value}
	</select>
	

	<insert id="insertUser" parameterType="User">
		insert into helf_users
		(user_id, user_email, user_name, user_tel, user_encrypted_password,
		 user_gender, user_type, rank_no, user_point, user_mobile_carrier)
		values
		(#{id}, #{email}, #{name}, #{tel}, #{encryptedPassword}, 
		 #{gender}, #{type}, #{rank.no}, #{point}, #{mobileCarrier})
	</insert>
	
	<!-- 트레이너 회원가입 1단계 (유저객체에 등록) -->
	<insert id="insertTrainer" parameterType="User">
		insert into helf_users
		(user_id, user_email, user_name, user_tel, user_encrypted_password,
		 user_gender, user_status, user_type, rank_no, user_point, user_mobile_carrier)
		values
		(#{id}, #{email}, #{name}, #{tel}, #{encryptedPassword}, 
		 #{gender}, #{status}, #{type}, null, #{point}, #{mobileCarrier})
	</insert>
	
	<!-- 트레이너 회원가입 2단계 (트레이너객체에 등록) -->
	<insert id="insertTrainer2" parameterType="Trainer">
		<selectKey keyProperty="trainerNo" resultType="int" order="BEFORE">
			select helf_files_seq.nextval from dual
		</selectKey>
		insert into helf_trainers
		(trainer_no, trainer_file, user_id)
		values
		(#{trainerNo}, #{trainerFile}, #{user.id})
	</insert>

	<!-- 트레이너 회원가입 2단계 (트레이너 경력객체에 등록) -->
	<insert id="insertTrainerCareer" parameterType="TrainerCareer">
		insert into helf_trainer_career
		(career_no, career_name, career_start_date, career_end_date, trainer_no)
		values
		(helf_trainer_career_seq.nextval, #{name}, #{startDate}, #{endDate}, #{trainer.trainerNo})
	</insert>
	
	<select id="getUsersByDigits" parameterType="string" resultType="kr.co.helf.vo.User">
		select
			user_id					as id,
			user_email				as email,
			user_name				as name,
			user_tel				as tel,
			user_encrypted_password as encryptedPassword,
			user_gender				as gender,
			user_status				as status,
			user_mobile_carrier		as mobileCarrier,
			user_create_date		as createDate,
			user_update_date		as updateDate,
			user_point				as point,
			rank_no					as "rank.no",
			user_type				as type
		from
			helf_users
		where substr(user_tel, 10, 4) = #{value}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="getIdByTel" resultType="string">
		select
			user_id
		from
			helf_users
		where 
			user_name = #{name}
			and user_tel = #{tel}
	</select>
	
	
	<!-- 아이디중복검사  -->
	<select id="idCheck" resultType="int" parameterType="string">
		select count(*) from helf_users where user_id = #{value}
	</select>
	
	
	
	
	<!-- 유저의 이용가능한 이용권 조회  // 추후 이용권 부분으로 옮길 예정 -->
	<select id="getMyMembership" resultType="kr.co.helf.vo.MyMembership" parameterType="string">
		select
			A.my_membership_no				as no,
			A.my_membership_startdate		as startDate,
			A.my_membership_enddate			as endDate,
			A.my_membership_remainder_cnt	as remainderCnt,
			A.my_membership_state			as state,
			A.user_id						as "user.id",
			A.membership_no					as "membership.no",
			B.membership_name				as "membership_name",
			C.category_no					as "membership.category.no",
			D.user_type						as "user.type",
			D.user_name						as "user.name"
			
		from
			helf_my_membership A
		Join
			helf_users D on A.user_id = D.user_id
		Join
			helf_membership B on A.membership_no = B.membership_no
		Join
			helf_membership_category C on B.category_no = C.category_no	
		where A.user_id = #{value}
        and A.my_membership_state = 'Y'
        and C.category_no IN (1, 2)
	</select>
	
	<insert id="insertAttendance" parameterType="string">
		insert into helf_customer_attendance
    				(customer_attendance_no, user_id)
		values 
    				(helf_customer_attendance_seq.nextval, #{value})
	</insert>
	
	<!-- 직원 출퇴근 내역 총 행의 갯수  -->
	<select id="getTotalRows" parameterType="map" resultType="int">
	select count(*)
	from helf_trainer_attendance
	where
		user_id = #{userId}
		<if test="state != null">
			and trainer_attendance_state = #{state}
		</if>
	</select>
	
	<!-- 직원 출퇴근 내역  - 채경 -->
	<select id="getTrainerAttendances" parameterType="map" resultType="kr.co.helf.vo.TrainerAttendance">
	select *
	from (
		select 
			trainer_attendance_no				as no,
			trainer_attendance_date				as "date",
			user_id								as "user.id",
			trainer_attendance_cause			as cause,
			trainer_attendance_state			as state,
			row_number() over (order by trainer_attendance_no desc) row_number
		from helf_trainer_attendance
		where
			user_id = #{userId}
			<if test="state != null">
				and trainer_attendance_state = #{state}
			</if>
		order by trainer_attendance_no desc
	) 
	where row_number between #{begin} and #{end}
	</select>
	
	<!-- 직원 출퇴근 등록 - 채경 -->
	<insert id="insertTrainerAttendances" parameterType="map">
		insert into helf_trainer_attendance(trainer_attendance_no, user_id, trainer_attendance_state, trainer_attendance_cause)
		values(helf_trainer_attendance_seq.nextval, #{userId}, #{state}, #{cause})	
	</insert>
</mapper>